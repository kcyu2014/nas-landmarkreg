# evaluate the cifar exps.

PYTHON=/home/rranftl/anaconda3/envs/nas-project/bin/python #/home/yukaiche/anaconda3/envs/pytorch-latest/bin/python
PARTITION=gpu
# PARTITION=q8 # for rtx 8000,  q6 for RTX 6000
GPU=1
DAYS=2
SUBMIT_FILE='bash/helper/slurm_submit_jobs.sh'
CONFIG=configs/cluster.json

if [ "$3" = "cvlab" ]; then
SUBMIT_FILE='bash/helper/kubernetes_submit_jobs.sh'
PYTHON=python
GPU=1
DAYS=2
CONFIG=configs/cvlab.json
fi


EXPERIMENT='experiments/darts-fromscratch'

policy='nao_nds'
if [ $1 == "scratch" ]; then
    SUB_EXP="cifar10"
    if [ "$2" = "debug" ]; then
    $PYTHON train_cifar.py --epochs=10 \
                --batch_size 96 \
                --init_channels 36 \
                --layers 20 \
                --policy ${policy} \
                --arch ${SEED} \
                --save debug/${EXPERIMENT}_${SUB_EXP} \
                --auxiliary \
                --cutout
    fi

    if [ "$2" -eq 1 ]; then
        declare -a arr2=('[0, 5, 1, 7, 0, 5, 0, 5, 0, 5, 0, 7, 1, 5, 1, 7, 0, 5, 0, 5, 0, 5, 0, 5, 1, 5, 1, 5, 0, 5, 0, 5]' 
                        '[0, 5, 0, 5, 0, 5, 0, 5, 1, 5, 0, 5, 1, 5, 1, 5, 1, 5, 0, 5, 0, 5, 1, 5, 1, 5, 1, 4, 1, 5, 1, 5]' 
                        '[0, 5, 1, 5, 0, 5, 0, 5, 0, 5, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 0, 5, 0, 0, 2, 5, 1, 5, 3, 5, 0, 5]' 
                        '[0, 5, 0, 5, 0, 5, 0, 0, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 1, 5, 1, 5, 1, 0, 1, 0]' 
                        '[0, 5, 0, 5, 0, 5, 0, 0, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 1, 5, 1, 5, 0, 0, 0, 0]')
        declare -a arr1=('0' '2' '4')
        # declare -a arr1=('0' '1' '2' '3' '4')
        TAG='spos'
    elif [ "$2" -eq 2 ]; then
        declare -a arr2=('[1, 3, 0, 1, 0, 6, 0, 6, 2, 7, 1, 3, 0, 1, 4, 3, 0, 7, 0, 5, 2, 0, 0, 6, 3, 5, 3, 5, 2, 3, 4, 3]'
                        '[1, 1, 0, 1, 0, 6, 0, 6, 2, 7, 1, 4, 0, 0, 4, 3, 0, 7, 0, 0, 2, 0, 0, 6, 3, 5, 3, 5, 2, 3, 4, 3]'
                        '[1, 1, 0, 1, 0, 6, 0, 6, 2, 7, 1, 4, 0, 0, 4, 3, 0, 7, 0, 0, 2, 0, 0, 6, 3, 5, 3, 0, 2, 3, 4, 3]'
                        '[1, 6, 0, 7, 0, 1, 2, 7, 0, 7, 1, 6, 1, 1, 1, 5, 1, 6, 1, 1, 1, 7, 1, 7, 1, 5, 1, 4, 4, 4, 4, 6]'
                        '[1, 6, 0, 7, 0, 1, 2, 7, 0, 7, 1, 6, 1, 1, 1, 5, 1, 6, 1, 1, 1, 7, 1, 7, 1, 5, 1, 3, 4, 3, 4, 6]'
                        '[0, 7, 0, 7, 0, 1, 2, 7, 0, 7, 1, 6, 1, 1, 1, 5, 1, 6, 1, 1, 1, 7, 1, 7, 1, 5, 1, 5, 4, 5, 4, 6]'
                        '[0, 6, 0, 7, 0, 1, 1, 1, 1, 1, 3, 6, 1, 4, 2, 7, 0, 1, 0, 1, 2, 6, 1, 7, 1, 7, 1, 0, 4, 1, 0, 3]'
                        '[1, 6, 0, 7, 0, 1, 2, 7, 0, 7, 1, 6, 1, 1, 1, 7, 1, 6, 1, 1, 1, 7, 1, 7, 1, 1, 1, 3, 2, 3, 4, 6]')
        declare -a arr1=('0' '2')
        TAG='spos_rankloss'
    elif [ "$2" -eq 3 ]; then
        declare -a arr1=('')
        TAG='gdas'
    elif [ "$2" -eq 4 ]; then
        declare -a arr2=('[0, 5, 1, 6, 1, 7, 2, 2, 2, 6, 3, 5, 3, 3, 1, 5, 1, 4, 0, 6, 1, 5, 2, 5, 1, 4, 0, 5, 2, 5, 0, 1]'
                        '[0, 4, 1, 1, 1, 7, 2, 2, 2, 4, 3, 6, 3, 7, 1, 6, 1, 7, 0, 1, 1, 1, 2, 2, 1, 1, 0, 3, 2, 1, 0, 5]'
                        '[0, 5, 1, 1, 1, 6, 2, 3, 2, 1, 3, 2, 3, 2, 1, 6, 1, 1, 0, 4, 1, 6, 2, 2, 1, 7, 0, 5, 2, 2, 0, 4]'
                        '[0, 4, 1, 7, 1, 3, 2, 7, 2, 2, 3, 2, 3, 7, 1, 3, 1, 7, 0, 2, 1, 6, 2, 5, 1, 2, 0, 4, 2, 2, 0, 3]'
                        '[0, 3, 1, 3, 1, 4, 2, 3, 2, 3, 3, 6, 3, 3, 1, 5, 1, 5, 0, 1, 1, 2, 2, 5, 1, 1, 0, 7, 2, 1, 0, 5]'
                        '[0, 5, 1, 6, 2, 6, 0, 7, 2, 3, 3, 1, 4, 2, 2, 4, 0, 7, 1, 7, 0, 2, 1, 4, 3, 7, 0, 2, 4, 6, 0, 2]'
                        '[0, 3, 1, 4, 2, 6, 0, 4, 2, 5, 3, 4, 4, 4, 2, 2, 0, 5, 1, 1, 0, 3, 1, 7, 3, 6, 0, 2, 4, 5, 0, 7]'
                        '[0, 6, 1, 4, 2, 2, 0, 2, 2, 1, 3, 2, 4, 4, 2, 3, 0, 7, 1, 1, 0, 4, 1, 2, 3, 7, 0, 3, 4, 5, 0, 5]'
                        '[0, 5, 1, 4, 2, 2, 0, 3, 2, 2, 3, 5, 4, 5, 2, 7, 0, 1, 1, 1, 0, 4, 1, 5, 3, 2, 0, 3, 4, 4, 0, 4]'
                        '[0, 2, 1, 4, 2, 6, 0, 6, 2, 6, 3, 1, 4, 1, 2, 6, 0, 1, 1, 6, 0, 2, 1, 4, 3, 5, 0, 4, 4, 1, 0, 6]')
        TAG='gdas_rankloss'
        declare -a arr1=('0' '1' '2' '4' '6' '8')
    elif [ "$2" -eq 5 ]; then
        declare -a arr2=('[0, 5, 1, 7, 0, 5, 0, 5, 0, 5, 0, 7, 1, 5, 1, 7, 0, 5, 0, 5, 0, 5, 0, 5, 1, 5, 1, 5, 0, 5, 0, 5]'
                        '[0, 5, 0, 5, 0, 5, 0, 5, 1, 5, 0, 5, 1, 5, 1, 5, 1, 5, 0, 5, 0, 5, 1, 5, 1, 5, 1, 4, 1, 5, 1, 5]'
                        '[0, 5, 1, 5, 0, 5, 0, 5, 0, 5, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 0, 5, 0, 0, 2, 5, 1, 5, 3, 5, 0, 5]'
                        '[0, 5, 0, 5, 0, 5, 0, 0, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 1, 5, 1, 5, 1, 0, 1, 0]'
                        '[0, 5, 0, 5, 0, 5, 0, 0, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 0, 5, 0, 5, 1, 5, 1, 5, 1, 5, 0, 0, 0, 0]')
        TAG='nao'
        declare -a arr1=('0' '1' '2' '3' '4')
    elif [ "$2" -eq 6 ]; then
        declare -a arr2=('[1, 3, 0, 1, 0, 6, 0, 6, 2, 7, 1, 3, 0, 1, 4, 3, 0, 7, 0, 5, 2, 0, 0, 6, 3, 5, 3, 5, 2, 3, 4, 3]'
                        '[1, 1, 0, 1, 0, 6, 0, 6, 2, 7, 1, 4, 0, 0, 4, 3, 0, 7, 0, 0, 2, 0, 0, 6, 3, 5, 3, 5, 2, 3, 4, 3]'
                        '[1, 1, 0, 1, 0, 6, 0, 6, 2, 7, 1, 4, 0, 0, 4, 3, 0, 7, 0, 0, 2, 0, 0, 6, 3, 5, 3, 0, 2, 3, 4, 3]'
                        '[1, 6, 0, 7, 0, 1, 2, 7, 0, 7, 1, 6, 1, 1, 1, 5, 1, 6, 1, 1, 1, 7, 1, 7, 1, 5, 1, 4, 4, 4, 4, 6]'
                        '[1, 6, 0, 7, 0, 1, 2, 7, 0, 7, 1, 6, 1, 1, 1, 5, 1, 6, 1, 1, 1, 7, 1, 7, 1, 5, 1, 3, 4, 3, 4, 6]'
                        '[0, 7, 0, 7, 0, 1, 2, 7, 0, 7, 1, 6, 1, 1, 1, 5, 1, 6, 1, 1, 1, 7, 1, 7, 1, 5, 1, 5, 4, 5, 4, 6]'
                        '[0, 6, 0, 7, 0, 1, 1, 1, 1, 1, 3, 6, 1, 4, 2, 7, 0, 1, 0, 1, 2, 6, 1, 7, 1, 7, 1, 0, 4, 1, 0, 3]'
                        '[1, 6, 0, 7, 0, 1, 2, 7, 0, 7, 1, 6, 1, 1, 1, 7, 1, 6, 1, 1, 1, 7, 1, 7, 1, 1, 1, 3, 2, 3, 4, 6]'
                        '[0, 5, 0, 5, 0, 6, 0, 6, 1, 1, 0, 5, 0, 5, 2, 5, 0, 5, 0, 6, 0, 6, 0, 1, 0, 5, 0, 5, 0, 5, 2, 5]')
        declare -a arr1=('8')
        TAG='nao_rankloss'
    elif [ "$2" -eq 10 ]; then
        declare -a arr2=('DARTS_V2' 'PC_DARTS_cifar' 'PC_DARTS_image')
        declare -a arr1=('0' '1' '2')
        TAG='published'
        policy='published'
    else
        exit
    fi
    epoch=120
    GPU=2
    for ((i=0;i<${#arr1[@]};i=i+1)); do
        arch=${arr2[arr1[i]]}
        # echo $arch
        EXPNAME="${TAG}-arch-${arr1[i]}-epoch${epoch}"
        cmd="$PYTHON train_cifar_tb.py \
              --epochs=${epoch} \
              --batch_size 128 \
              --init_channels 36 \
              --layers 20 \
              --policy ${policy} \
              --arch '${arch}' \
              --save ${EXPERIMENT}/${SUB_EXP}/${EXPNAME} \
              --auxiliary \
              --cutout \
            2>&1 \
            | tee logs/${EXPERIMENT}/${SUB_EXP}_$EXPNAME.log " 
        
        cmdALL="mkdir -p logs/${EXPERIMENT}/ &&  $cmd"
        KBSNAME=cifar-fromscratch-$SUB_EXP-$EXPNAME
        bash $SUBMIT_FILE "$cmdALL" $(($i)) $GPU $PARTITION $DAYS $KBSNAME '' k8s/cifar.yaml $4 $3 
    done

fi